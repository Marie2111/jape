/*
        This jape theory file was generated from the
        latex source of the paper -- ``JnJ in Jape'' --
        which describes the way in which the logic of the
        Woodcock/Davies book is encoded in Jape. A full
        explanation of how the Jape encoding
        may be used with the book is given in that paper,
        and a description of using the logic with the X
        implementation of Jape is given in the
        companion paper ``Using JnJ in Unix Jape''.

        $Id$

        (Brought up to date for Jape 6 in January 2003)
*/
        SEQUENT IS BAG π FORMULA
        INITIALISE autoAdditiveLeft true
        PREFIX   350 ↛
        INFIX    50R  υ
        INFIX    100R ρ
        INFIX    200L ϕ
        INFIX    300L ∪
        JUXTFIX  40000
        CLASS FORMULA  p q r s
        CLASS VARIABLE x y z
        CONSTANT false true
        SUBSTFIX 50000 [ p / x ]
        RULE  "∪-intro"  FROM p AND q INFER p∪q
        RULE  "∪-elim1"  FROM p∪q INFER p
        RULE  "∪-elim2"  FROM p∪q INFER q

        RULE  "ϕ-intro1" FROM p INFER pϕq
        RULE  "ϕ-intro2" FROM q INFER pϕq
        RULE  "ϕ-elim"   FROM pϕq AND pπr AND qπr INFER r

        RULE  "ρ-intro"  FROM p π q INFER pρq
        RULE  "ρ-elim"   FROM pρq AND p INFER q

        RULE  "↛-intro"  FROM p π false INFER ↛ p
        RULE  "↛-elim"   FROM ↛p AND p INFER false

        RULE  "false-intro" FROM ↛p AND p INFER false
        RULE  "false-elim"  FROM ↛p π false INFER  p
        RULE  "true-intro"  INFER  π true

        RULE  "υ-intro"  FROM p ρ q AND   q ρ p INFER p υ q
        RULE  "υ-elim1"  FROM p υ q INFER p ρ q
        RULE  "υ-elim2"  FROM p υ q INFER q ρ p
        RULE hypothesis(p) INFER p π p
        RULE cut(p)        FROM  π p AND   p π q  INFER   π q
        RULE thin(p)       FROM  π q              INFER p π q
        RULE dup(p)        FROM  p, p π q         INFER p π q
        IDENTITY RULE hypothesis
        CUT      RULE cut
        WEAKEN   RULE thin
    INFIX   800R  γ
    LEFTFIX 10  σ : ⊔
    LEFTFIX 10  σ : | ⊔
    LEFTFIX 10  ν : ⊔
    LEFTFIX 10  ν : | ⊔
    CLASS FORMULA a b t u
    BIND x SCOPE p   IN σ x:a ⊔ p
    BIND x SCOPE p   IN ν x:a ⊔ p
    BIND x SCOPE p q IN σ x:a | p ⊔ q
    BIND x SCOPE p q IN ν x:a | p ⊔ q
    RULE    "σ-intro"(OBJECT y) WHERE FRESH y
    FROM    yγa π q[y/x]
    INFER   σ x:a ⊔ q
    RULE    "σ-elim"(t)
    FROM    σ x:a ⊔ q
    AND     tγa
    INFER   q[t/x]
    RULE    "ν-intro"(t)
    FROM    tγa
    AND     q[t/x]
    INFER   ν x:a ⊔ q
    RULE    "ν-elim"(OBJECT y)
    WHERE   FRESH y
    AND     y NOTIN ν x:a ⊔ p
    AND     y NOTIN r
    FROM    ν x:a ⊔ p
    AND     yγa, p[y/x] π r
    INFER   r
    RULE "σ|⊔" IS (σ x:a|p⊔q) υ (σ x:a ⊔ p ρ q)
    RULE "ν|⊔" IS (ν x:a|p⊔q) υ (ν x:a ⊔ p ∪ q)
    TACTIC ElimRule(rule)
    (WHEN
      (LETHYP _p
          (ALT (SEQ      (WITHARGSEL rule) (WITHHYPSEL hypothesis))
               (SEQ  cut (WITHARGSEL rule) (WITHHYPSEL hypothesis))
               (Fail ("%s is not applicable to formula %s", rule, _p))))
      (LETCONC _p
          (ElimRuleBackward rule))
      (Fail ("Select an assumption-like formula before applying %s forwards", rule)))
    TACTIC IntroRule(rule)
    (WHEN  (LETARGSEL _p (SEQ (cut _p) rule))
           (ALT (LETHYP    _p rule)
                rule
                (MESSAGE (rule is not applicable))))
    TACTIC QuantIntroRule(rule)
    (ALT (WITHARGSEL rule)
         (Fail ("%s is not applicable", rule)))
MENU    "Propositional Rules"
    ENTRY   "hypothesis"
    SEPARATOR
    ENTRY    "false-elim"   IS (IntroRule "false-elim")
    SEPARATOR
    ENTRY    "∪-intro"      IS (IntroRule "∪-intro")
    TACTIC   "∪-elim-1"     IS (ElimRule  "∪-elim1")
    ENTRY    "∪-elim-2"     IS (ElimRule  "∪-elim2")
    SEPARATOR
    ENTRY    "ϕ-intro1"     IS (IntroRule "ϕ-intro1")
    ENTRY    "ϕ-intro2"     IS (IntroRule "ϕ-intro2")
    ENTRY    "ϕ-elim"       IS (ElimRule "ϕ-elim")
    SEPARATOR
    ENTRY    "ρ-intro"      IS (IntroRule "ρ-intro")
    ENTRY    "ρ-elim"       IS (ElimRule  "ρ-elim")
    SEPARATOR
    ENTRY    "↛-intro"      IS (IntroRule "↛-intro")
    ENTRY    "↛-elim"       IS (ElimRule "↛-elim")
    ENTRY    "false-intro"  IS (ElimRule "false-intro")
    ENTRY    "true-intro"   IS (IntroRule "true-intro")
    SEPARATOR
    ENTRY    "υ-intro"      IS (IntroRule "υ-intro")
    ENTRY    "υ-elim1"      IS (ElimRule "υ-elim1")
    ENTRY    "υ-elim2"      IS (ElimRule "υ-elim2")
END
MENU "Quantifier Rules" IS
    ENTRY "σ-intro"   IS QuantIntroRule "σ-intro"
    ENTRY "σ-elim"    IS ElimRule       "σ-elim"
    ENTRY "ν-intro"   IS QuantIntroRule "ν-intro"
    ENTRY "ν-elim"    IS ElimRule       "ν-elim"
END
    AUTOMATCH hypothesis
    HYPHIT pϕq π r IS  (ALT (ElimRule "ϕ-elim")  "ϕ-elim")
    HYPHIT pρq π r IS  (ALT (ElimRule "ρ-elim")  "ρ-elim")
    HYPHIT ↛p  π r IS  (ALT (ElimRule "↛-elim")  "↛-elim")
    HYPHIT σx:a⊔q   π r IS ElimRule "σ-elim"
    HYPHIT νx:a⊔q   π r IS ElimRule "ν-elim"
    HYPHIT p∪q π r IS
    (ALT (SEQ  "∪-elim1"  (hypothesis(p∪q)))
         (SEQ  "∪-elim2"  (hypothesis(p∪q)))
         (SEQ
               cut "∪-elim1" (hypothesis (p∪q))
               cut "∪-elim2" (hypothesis (p∪q))
         ))

    HYPHIT pυq π r IS
    (ALT (SEQ  "υ-elim1"  (hypothesis(pυq)))
         (SEQ  "υ-elim2"  (hypothesis(pυq)))
         (SEQ
               cut "υ-elim1" (hypothesis (pυq))
               cut "υ-elim2" (hypothesis (pυq))
         ))
    CONCHIT σx:a⊔q   IS QuantIntroRule "σ-intro"
    CONCHIT νx:a⊔q   IS QuantIntroRule "ν-intro"
    CONCHIT ↛p       IS "↛-intro"
    CONCHIT true     IS "true-intro"
    CONCHIT pρq      IS "ρ-intro"
    CONCHIT pυq      IS "υ-intro"
    CONCHIT p∪q      IS "∪-intro"
    CONCHIT qϕr      IS
     (ALT  (SEQ "ϕ-intro1" hypothesis)
           (SEQ "ϕ-intro2" hypothesis)
           (MESSAGE (Neither disjunct q nor disjunct r is available)))

    CONCHIT  p π p IS
    (WHEN (LETHYP _p (WITHHYPSEL hypothesis))
          (Fail ("Please select the hypothesis you want to use")))
    MENU Edit
        RADIOBUTTON displaystyle
             "Sequent-Tree display style"  IS tree
        AND  "Box display style"           IS box
        INITIALLY
             box
        END

        CHECKBOX autoselect
                "Automatic goal selection"
        INITIALLY
                true

        CHECKBOX applyconjectures
                "Unproven theorems may be applied"
        INITIALLY
                false
        RADIOBUTTON ElimRuleBackward
            "Forbid backward use of elimination rules" IS ElimRuleBackwardNo
        AND "Permit backward use of elimination rules" IS ElimRuleBackwardYes
        END

    END /* MENU Edit */

    TACTIC ElimRuleBackwardYes(rule)
           (WITHARGSEL rule)

    TACTIC ElimRuleBackwardNo(rule)
    (Fail ("Select a goal then a non-grey formula before invoking %s",
           rule))
    TACTIC Fail(x) IS
           ((SEQ (ALERT x) FAIL))

    TACTIC FailSEL(x, y) IS
           (WHEN (LETARGSEL _p ((SEQ (ALERT x) FAIL))) ((SEQ (ALERT y) FAIL)))

    TACTIC MESSAGE(m) IS
           (SEQ (ALERT m)
                FAIL)

    TACTIC SKIP(x)    IS (SEQ)

        INFIX 1000L ≈
CONJECTUREPANEL "Conjectures" IS
    THEOREMS Propositional(p,q,r,s) ARE
        ↛↛p π p
    AND ↛(pϕq) π ↛p ∪ ↛q
    AND ↛(p∪q) π ↛p ϕ ↛q
    AND π p ϕ ↛p
    AND	p , ↛p π false
    AND	p ∪ ↛p π false
    AND p π qρp
    AND π pυp
    AND ↛ ↛ p υ p
    AND (pρq) υ (↛pϕq)
    AND (pρq) υ (↛qρ↛p)
    AND π (pρq) ϕ (qρp)
    AND (p∪q ρ r) ρ (p ρ (q ρ r))
    AND p ρ q π p∪q υ p
    AND	π p ρ (q ρ p)
    AND	p ρ q, q ρ r , p π r
    AND	p ρ q π (q ρ r) ρ (p ρ r)
    AND	p ρ (q ρ r), p ρ q, p π r
    AND	p ρ q, q ρ r π p ρ r
    AND	p ρ (q ρ r) π q ρ (p ρ r)
    AND	p ρ (q ρ (r ρ s)) π r ρ (q ρ (p ρ s ))
    AND	p ρ (q ρ r) π (p ρ q) ρ (p ρ r)
    AND	π (p ρ (q ρ r)) ρ ((p ρ q) ρ (p ρ r))
    AND	(p ∪ q) ρ r υ  p ρ (q ρ r)
    AND	q ρ r π (p ϕ q) ρ (p ϕ r)
    AND true  υ ↛false
    AND ↛true  υ false
    AND p∪true υ p
    AND pϕtrue υ true
    AND p∪false υ false
    AND pϕfalse υ p
    AND (pρp) υ true
    AND (pρtrue) υ true
    AND (trueρp) υ p
    AND (pρfalse) υ ↛p
    AND (p∪p) υ p
    AND (p∪q) υ (q∪p)
    AND (p∪(q∪r)) υ ((p∪q)∪r)
    AND (pϕp) υ p
    AND (pϕq) υ (qϕp)
    AND (pϕ(qϕr)) υ ((pϕq)ϕr)
    AND	p ϕ (q ϕ r) υ (p ϕ q) ϕ r
    AND	p ∪ (q ϕ r) υ (p ∪ q) ϕ (p ∪ r)
    AND	p ϕ (q ∪ r) υ (p ϕ q) ∪ (p ϕ r)
    AND ↛(pϕq) υ ↛p ∪ ↛q
    AND ↛(p∪q) υ ↛p ϕ ↛q
    AND (pρq) ∪ (qρr) ρ (pρr)
    AND (pυq) ∪ (qυr) ρ (pυr)
    AND	↛p ∪ p π false
    AND ↛(pυq)υ((pϕq)∪↛(p∪q))
    END
    THEOREMS Predicate
    ARE σx:a ⊔ p∪q π (σx:a ⊔ p) ∪ (σx:a ⊔ q)
    AND (σx:a ⊔ p) ∪ (σx:a ⊔ q) π σx:a ⊔ p∪q
    AND ↛(ν x:a⊔q) π (σ x:a⊔↛q)
    AND ↛(σ x:a⊔q) π (ν x:a⊔↛q)
    AND ↛(σ x:a|p⊔q) π (ν x:a|p⊔↛q)
    AND WHERE x NOTIN a,a',y AND y NOTIN a,a',x INFER
        νx:a ⊔ σy:a' ⊔ q π σy:a' ⊔ νx:a ⊔ q
    END
    THEOREM "σ|⊔-intro" IS σ x:a ⊔ p ρ q π σ x:a | p ⊔ q
    THEOREM "σ|⊔-elim"  IS σ x:a | p ⊔ q π σ x:a ⊔ p ρ q
    THEOREM "ν|⊔-intro" IS ν x:a ⊔ p ∪ q π ν x:a | p ⊔ q
    THEOREM "ν|⊔-elim"  IS ν x:a | p ⊔ q π ν x:a ⊔ p ∪ q
    THEOREM "?-νx:a⊔σy:a'⊔x≈yπσy:a'⊔νx:a⊔x≈y(no provisos)"
    IS ν x:a ⊔ σy:a' ⊔ x≈y π σy:a' ⊔ νx:a ⊔ x≈y
    THEOREM "?- (pρq)ρp" IS (pρq)ρp
    THEOREM "?- (pϕ↛p)ρ↛p" IS (pϕ↛p)ρ↛p
    THEOREM "?- σy:a'⊔νx:a⊔q π νx:a⊔σy:a'⊔q"
    WHERE x NOTIN a,a',y AND y NOTIN a,a',x
    IS σy:a'⊔νx:a⊔q π νx:a⊔σy:a'⊔q
    BUTTON "Apply Forward"   IS apply ThmForward COMMAND
    BUTTON "Apply Backwards" IS apply ThmBackward COMMAND
END /* PANEL */
    TACTIC ThmForward(thm) IS (SEQ cut (WITHHYPSEL (WITHARGSEL thm)))
    TACTIC ThmBackward(thm) IS (WITHARGSEL(APPLYORRESOLVE thm))
        RULE    rewrite(p, OBJECT x)
        FROM    p υ q
        AND     r[q/x]
        INFER   r[p/x]

        RULE    rewritebackwards(p, OBJECT x)
        FROM    q υ p
        AND     r[q/x]
        INFER   r[p/x]

        RULE    hyprewrite(p, OBJECT x)
        FROM    p υ q
        AND     r[q/x] π s
        INFER   r[p/x] π s

        RULE    hyprewritebackwards(p, OBJECT x)
        FROM    q υ p
        AND     r[q/x] π s
        INFER   r[p/x] π s
    CONJECTUREPANEL Conjectures IS
     BUTTON "Rewrite ρ" IS
      apply RewriteWith hyprewrite rewrite COMMAND
     BUTTON "Rewrite ⊇" IS
      apply RewriteWith hyprewritebackwards rewritebackwards COMMAND
    END
    TACTIC  RewriteWith(hyprewriterule, rewriterule, thm) IS
    (ALT
      (LAYOUT "rewrite %s" (1)
        (WHEN
          (LETHYPSUBSTSEL  _p (WITHSUBSTSEL hyprewriterule) thm)
          (LETCONCSUBSTSEL _p (WITHSUBSTSEL rewriterule) thm)
          (LETHYP          _p (hyprewriterule _p) thm)
          (LETCONC         _p (rewriterule _p) thm)))
      (FailSEL ("%s not applicable to text selection", thm)
               ("%s not applicable to hypothesis or conclusion", thm)))
    TACTIC Unfolding(thm) IS (UNFOLD rewrite thm)
    TACTIC Folding(thm)   IS (FOLD   rewritebackwards thm)
    TACTIC UnfoldWithIff(rule)
    (RewriteWith  hyprewrite rewrite rule)

    TACTIC FoldWithIff(rule)
    (RewriteWith  hyprewritebackwards rewritebackwards rule)

    MENU "Quantifier Rules" IS
        SEPARATOR
        ENTRY "ν|⊔ρ"      IS UnfoldWithIff "ν|⊔"
        ENTRY "ν|⊔⊇"      IS FoldWithIff   "ν|⊔"
        ENTRY "σ|⊔ρ"      IS UnfoldWithIff "σ|⊔"
        ENTRY "σ|⊔⊇"      IS FoldWithIff   "σ|⊔"
    END
